name: Build

on:
  push:
    branches: ["system_deps_test"]

env:
  BUILD_TYPE: Release

jobs:
  # MacOS build
  macos:
    runs-on: macos-11

    strategy:
      matrix:
        include:
          - suffix: ""
            custom_glfw: false

    name: üçé macOS 11.0${{matrix.suffix}}

    steps:
    - name: üß∞ Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: üìú Set version variable
      run: |
        echo "IMHEX_VERSION=`cat VERSION`" >> $GITHUB_ENV

    - name: üìú Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}-${{ matrix.suffix }}-${{ secrets.CACHE_VERSION }}-build-${{ github.run_id }}
        restore-keys: ${{ runner.os }}-${{ matrix.suffix }}-${{ secrets.CACHE_VERSION }}-build
        max-size: 50M

    - name: üìú Restore CMakeCache
      uses: actions/cache@v3
      with:
        path: |
          build/CMakeCache.txt
        key: ${{ runner.os }}-${{ matrix.suffix }}-${{ secrets.CACHE_VERSION }}-build-${{ hashFiles('**/CMakeLists.txt') }}

    - name: ‚¨áÔ∏è Install dependencies
      run: |
        brew bundle --no-lock --file dist/Brewfile
        rm -rf /usr/local/Cellar/capstone

    - name: ‚¨áÔ∏è Install classic glfw
      if: ${{! matrix.custom_glfw}}
      run: |
        brew install glfw

    - name: üß∞ Checkout glfw
      if: ${{matrix.custom_glfw}}
      uses: actions/checkout@v3
      with:
        repository: glfw/glfw
        path: glfw

    - name: ‚¨áÔ∏è Patch and install custom glfw
      if: ${{matrix.custom_glfw}}
      run: |
        cd glfw
        git apply ../dist/macOS/0001-glfw-SW.patch

        mkdir build
        cd build

        cmake                                           \
          -DBUILD_SHARED_LIBS=ON                        \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache            \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache          \
          -DCMAKE_OBJC_COMPILER_LAUNCHER=ccache         \
          -DCMAKE_OBJCXX_COMPILER_LAUNCHER=ccache       \
          -DIMHEX_COMMIT_HASH_SHORT="${GITHUB_SHA::7}"  \
          -DIMHEX_COMMIT_HASH_LONG="${GITHUB_SHA}"      \
          -DIMHEX_COMMIT_BRANCH="${GITHUB_REF##*/}"     \
        ..
        make -j 4 install

    # MacOS cmake build
    - name: üõ†Ô∏è Build
      run: |
        mkdir -p build
        cd build
        CC=$(brew --prefix gcc@12)/bin/gcc-12                                                       \
        CXX=$(brew --prefix gcc@12)/bin/g++-12                                                      \
        OBJC=$(brew --prefix llvm)/bin/clang                                                        \
        OBJCXX=$(brew --prefix llvm)/bin/clang++                                                    \
        PKG_CONFIG_PATH="$(brew --prefix openssl)/lib/pkgconfig":"$(brew --prefix)/lib/pkgconfig"   \
        MACOSX_DEPLOYMENT_TARGET="10.10"                                                            \
        cmake                                                                                       \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE                                                            \
          -DCREATE_BUNDLE=ON                                                                        \
          -DCREATE_PACKAGE=ON                                                                       \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache                                                        \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache                                                      \
          -DCMAKE_OBJC_COMPILER_LAUNCHER=ccache                                                     \
          -DCMAKE_OBJCXX_COMPILER_LAUNCHER=ccache                                                   \
          -DIMHEX_PATTERNS_PULL_MASTER=ON                                                           \
          -DIMHEX_COMMIT_HASH_SHORT="${GITHUB_SHA::7}"                                              \
          -DIMHEX_COMMIT_HASH_LONG="${GITHUB_SHA}"                                                  \
          -DIMHEX_COMMIT_BRANCH="${GITHUB_REF##*/}"                                                 \
          -DCMAKE_OSX_DEPLOYMENT_TARGET="10.10"                                                     \
          -DCPACK_PACKAGE_FILE_NAME="imhex-${{env.IMHEX_VERSION}}-macOS${{matrix.suffix}}-x86_64"   \
          ..
        make -j4 package

  # RPM distro builds
  rpm-build:
    strategy:
      matrix:
        include:
          - name: Fedora
            mock_release: rawhide
            release_num: rawhide
            mock_config: fedora-rawhide

    name: üêß ${{ matrix.name }} ${{ matrix.release_num }}
    runs-on: ubuntu-latest

    container:
      image: "fedora:latest"
      options: --privileged

    steps:
      - name: ‚¨áÔ∏è Install git-core
        run: dnf install --disablerepo="*" --enablerepo="fedora" git-core -y

      - name: üß∞ Checkout
        uses: actions/checkout@v3
        with:
          path: ImHex
          submodules: recursive

      - name: üìú Setup DNF Cache
        uses: actions/cache@v3
        with:
          path: /var/cache/dnf
          key: ${{ matrix.mock_release }}-${{secrets.CACHE_VERSION }}-dnf-${{ github.run_id }}
          restore-keys: |
            ${{ matrix.mock_release }}-${{secrets.CACHE_VERSION }}-dnf-

      - name: ‚¨áÔ∏è Update all packages and install dependencies
        run: |
          dnf upgrade --disablerepo="*" --enablerepo="fedora,updates" -y
          dnf install --disablerepo="*" --enablerepo="fedora,updates" -y \
          fedpkg         \
          ccache

      - name: üìú Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2.5
        with:
          key: rpm-${{ matrix.mock_release }}-${{ secrets.CACHE_VERSION }}-build-${{ github.run_id }}
          restore-keys: rpm-${{ matrix.mock_release }}-${{ secrets.CACHE_VERSION }}-build
          max-size: 1G

      - name: üìú Set version variable
        run: |
          echo "IMHEX_VERSION=`cat ImHex/VERSION`" >> $GITHUB_ENV

      - name: üóúÔ∏è Create tarball from sources with dependencies
        run: tar --exclude-vcs -czf $GITHUB_WORKSPACE/imhex-$IMHEX_VERSION.tar.gz ImHex

      - name: ‚úíÔ∏è Modify spec file
        run: |
          sed -i \
          -e 's/Version:        [0-9]*\.[0-9]*\.[0-9]*$/Version:        ${{env.IMHEX_VERSION}}/g' \
          -e 's/IMHEX_OFFLINE_BUILD=ON/IMHEX_OFFLINE_BUILD=OFF/g'                                 \
          -e '/IMHEX_OFFLINE_BUILD=OFF/a -D IMHEX_PATTERNS_PULL_MASTER=ON \\'                     \
          -e '/BuildRequires:  cmake/a BuildRequires:  git-core'                                  \
          -e '/%files/a %{_datadir}/%{name}/'                                                     \
          $GITHUB_WORKSPACE/ImHex/dist/rpm/imhex.spec

      - name: üìú Fix ccache on EL9
        if: matrix.mock_release == 'epel9'
        run: sed -i '/\. \/opt\/rh\/gcc-toolset-12\/enable/a PATH=/usr/lib64/ccache:$PATH' $GITHUB_WORKSPACE/ImHex/dist/rpm/imhex.spec

      - name: üü© Copy spec file to build root
        run: mv $GITHUB_WORKSPACE/ImHex/dist/rpm/imhex.spec $GITHUB_WORKSPACE/imhex.spec

      - name: üìú Enable ccache for mock
        run: |
          cat <<EOT > $GITHUB_WORKSPACE/mock.cfg
          include('${{ matrix.mock_config }}-x86_64.cfg')
          config_opts['plugin_conf']['ccache_enable'] = True
          config_opts['plugin_conf']['ccache_opts']['max_cache_size'] = '1G'
          config_opts['plugin_conf']['ccache_opts']['compress'] = True
          config_opts['plugin_conf']['ccache_opts']['dir'] = "$GITHUB_WORKSPACE/.ccache"
          EOT

      - name: üìú Setup Mock Cache
        uses: actions/cache@v3
        with:
          path: /var/cache/mock
          key: ${{ matrix.mock_release }}-${{ secrets.CACHE_VERSION }}-mock-${{ github.run_id }}
          restore-keys: |
            ${{ matrix.mock_release }}-${{ secrets.CACHE_VERSION }}-mock-

      # Fedora cmake build (in imhex.spec)
      - name: üì¶ Build RPM
        run: |
          fedpkg --path $GITHUB_WORKSPACE --release ${{ matrix.mock_release }} mockbuild --enable-network -N --root $GITHUB_WORKSPACE/mock.cfg extra_args -- -v

      - name: üü© Move and rename finished RPM
        run: |
          mv $GITHUB_WORKSPACE/results_imhex/${{env.IMHEX_VERSION}}/*/imhex-${{env.IMHEX_VERSION}}-0.*.x86_64.rpm \
          $GITHUB_WORKSPACE/imhex-${{env.IMHEX_VERSION}}-${{matrix.name}}-${{matrix.release_num}}-x86_64.rpm
